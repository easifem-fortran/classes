MODULE GenericList_Class
  USE GlobalData
  IMPLICIT NONE

  INTEGER( I4B ), ALLOCATABLE :: GenericListData( : )

  PRIVATE
  PUBLIC :: GenericList_, GenericListData, GenericList_Initiate, &
      & GenericList_DeallocateData, GenericList_SetNode, &
      & GenericList_GetNode, GenericList_NextNode, GenericList_InsertNode


  !---------------------------------------------------------------------------
  !                                                          GenericList_
  !---------------------------------------------------------------------------

  TYPE :: GenericList_
    PRIVATE
    INTEGER, POINTER :: DATA( : ) => NULL( )
    TYPE( GenericList_ ), POINTER :: Next => NULL( )

    ! CONTAINS
    ! PROCEDURE, PUBLIC, PASS( obj ) :: GenericList_Initiate, &
    !   & GenericList_DeallocateData, GenericList_SetNode, &
    !   & GenericList_GetNode, GenericList_NextNode, GenericList_InsertNode

  END TYPE GenericList_

  !---------------------------------------------------------------------------
  !                                                                  Contains
  !---------------------------------------------------------------------------

  CONTAINS

  !---------------------------------------------------------------------------
  !                                                      GenericList_Initiate
  !---------------------------------------------------------------------------

  SUBROUTINE GenericList_Initiate( obj, Data )

    ! Define intent of dummy variables
    TYPE( GenericList_ ), INTENT( INOUT ), POINTER :: obj
    INTEGER( I4B ), INTENT( IN ), OPTIONAL :: Data( : )

    ALLOCATE( obj )
    NULLIFY( obj % Next )

    IF( PRESENT( Data ) ) THEN

      ALLOCATE( obj % Data( SIZE( Data ) ) )
      obj % Data = Data

    ELSE

      NULLIFY( obj % DATA )

    END IF

  END SUBROUTINE GenericList_Initiate

  !---------------------------------------------------------------------------
  !                                                GenericList_DeallocateData
  !---------------------------------------------------------------------------

  SUBROUTINE GenericList_DeallocateData( obj )

    ! Define intent of dummy variables
    TYPE( GenericList_ ), INTENT( INOUT ), POINTER :: obj

    ! Define internal variables
    TYPE( GenericList_ ), POINTER :: Current, Next


    Current => obj

    DO WHILE( ASSOCIATED( Current ) )
      Next => Current % Next
      IF( ASSOCIATED( Current % Data ) ) THEN
        DEALLOCATE( Current % Data )
        NULLIFY( obj % Data )
      END IF

      DEALLOCATE( Current )
      NULLIFY( Current )
      Current => Next
    END DO

  END SUBROUTINE GenericList_DeallocateData

  !---------------------------------------------------------------------------
  !                                                     GenericList_SetNode
  !---------------------------------------------------------------------------

  SUBROUTINE GenericList_SetNode( obj, Data )

    ! Define intent of dummy variables
    TYPE( GenericList_ ), INTENT( INOUT ), POINTER :: obj
    INTEGER( I4B ), INTENT( IN ) :: Data( : )


    IF( ASSOCIATED( obj % Data ) ) THEN
      DEALLOCATE( obj % Data )
      NULLIFY( obj % Data )
    END IF

    ALLOCATE( obj % Data( SIZE( Data ) ) )
    obj % Data = Data

  END SUBROUTINE GenericList_SetNode

  !---------------------------------------------------------------------------
  !                                                       GenericList_GetNode
  !---------------------------------------------------------------------------

  FUNCTION GenericList_GetNode( obj ) RESULT( Data )

    ! Define intent of dummy variables
    TYPE( GenericList_ ), INTENT( INOUT ), POINTER :: obj
    INTEGER( I4B ), POINTER :: Data( : )

    Data => obj % Data

  END FUNCTION GenericList_GetNode

  !---------------------------------------------------------------------------
  !                                                      GenericList_NextNode
  !---------------------------------------------------------------------------

  FUNCTION GenericList_NextNode( obj ) RESULT( Next )

    ! Define intent of dummy variables
    TYPE( GenericList_ ), INTENT( INOUT ), POINTER :: obj
    TYPE( GenericList_ ), POINTER :: Next
    Next => obj % Next
  END FUNCTION GenericList_NextNode


  !---------------------------------------------------------------------------
  !                                                    GenericList_InsertNode
  !---------------------------------------------------------------------------

  SUBROUTINE GenericList_InsertNode( obj, Data )

    ! Define intent of dummy variables
    TYPE( GenericList_ ), INTENT( INOUT ), POINTER :: obj
    INTEGER( I4B ), INTENT( IN ), OPTIONAL :: Data( : )

    ! Define internal variables
    TYPE( GenericList_ ), POINTER :: Next

    ALLOCATE( Next )

    IF( PRESENT( Data ) ) THEN
      ALLOCATE( Next % Data( SIZE( Data ) ) )
      Next % Data = Data
    ELSE
      NULLIFY( Next % Data )
    END IF

    Next % Next => obj % Next
    obj % Next => Next

  END SUBROUTINE GenericList_InsertNode

END MODULE GenericList_Class